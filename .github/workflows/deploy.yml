name: Deploy Storm server to Docker
# Deploys data based off master branch
on:
  workflow_dispatch:
  push:
    branches: [main]
    paths:
      - src/**
      - production/**
jobs:
  Dockerizing:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Docker Login
        env:
          DOCKER_USER: "${{ secrets.DOCKER_USER }}"
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          docker login -u $DOCKER_USER -p $DOCKER_PASSWORD

      - name: Dockerize Storm-Server SHA
        env:
          DH_REPO: "${{ secrets.DH_REPO }}"
          GITHUB_SHA: "${{ github.sha }}"
        run: |
          docker buildx build --tag $DH_REPO:$GITHUB_SHA -f ./prod.dockerfile .

      - name: Docker push Storm server
        env:
          DH_REPO: "${{ secrets.DH_REPO }}"
          GITHUB_SHA: "${{ github.sha }}"
        run: |
          docker push $DH_REPO:$GITHUB_SHA

      - name: Dockerize Storm-Server
        env:
          DH_REPO: "${{ secrets.DH_REPO }}"
        run: |
          docker buildx build --tag $DH_REPO:latest -f ./prod.dockerfile .
      - name: Docker push Storm server
        env:
          DH_REPO: "${{ secrets.DH_REPO }}"
        run: |
          docker push $DH_REPO:latest

  # DeployToLKS:
  #   needs: [Dockerizing]
  #   if: success('Dockerizing')
  #   runs-on: "ubuntu-latest"
  #   steps:
  #     - uses: actions/checkout@v1
  #     - name: Set up environment variables
  #       env:
  #         OPENAI_API_KEY: "${{ secrets.OPENAI_API_KEY }}"
  #         SUPABASE_BUCKET: "${{ secrets.SUPABASE_BUCKET }}"
  #         SUPABASE_KEY: "${{ secrets.SUPABASE_KEY }}"
  #         SUPABASE_URL: "${{ secrets.SUPABASE_URL }}"
  #         YDC_API_KEY: "${{ secrets.YDC_API_KEY }}"
  #       run: |
  #         echo "::add-mask::$OPENAI_API_KEY"
  #         echo "::add-mask::$SUPABASE_BUCKET"
  #         echo "::add-mask::$SUPABASE_KEY"
  #         echo "::add-mask::$SUPABASE_URL"
  #         echo "::add-mask::$YDC_API_KEY"
  #     - name: "Deploy"
  #       uses: "deliverybot/helm@v1"
  #       with:
  #         release: "storm-server"
  #         namespace: "videovault"
  #         chart: "./production/production-helm-chart"
  #         token: "${{ github.token }}"
  #         values: |
  #           secret.openAPIKey: $OPENAI_API_KEY
  #           secret.youComKey: $YDC_API_KEY
  #           secret.supabaseUrl: $SUPABASE_URL
  #           secret.supabaseKey: $SUPABASE_KEY
  #           secret.supabaseBucket: $SUPABASE_BUCKET
  #         value-files: "production/production-helm-chart/values.yaml"
  #       env:
  #         KUBECONFIG_FILE: "${{ secrets.KUBECONFIG }}"
